# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.cloud.billing_v1.proto import (
    cloud_catalog_pb2 as google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2,
)


class CloudCatalogStub(object):
    """A catalog of Google Cloud Platform services and SKUs.
    Provides pricing information and metadata on Google Cloud Platform services
    and SKUs.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListServices = channel.unary_unary(
            "/google.cloud.billing.v1.CloudCatalog/ListServices",
            request_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesResponse.FromString,
        )
        self.ListSkus = channel.unary_unary(
            "/google.cloud.billing.v1.CloudCatalog/ListSkus",
            request_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusResponse.FromString,
        )


class CloudCatalogServicer(object):
    """A catalog of Google Cloud Platform services and SKUs.
    Provides pricing information and metadata on Google Cloud Platform services
    and SKUs.
    """

    def ListServices(self, request, context):
        """Lists all public cloud services.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSkus(self, request, context):
        """Lists all publicly available SKUs for a given cloud service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CloudCatalogServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListServices": grpc.unary_unary_rpc_method_handler(
            servicer.ListServices,
            request_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesRequest.FromString,
            response_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesResponse.SerializeToString,
        ),
        "ListSkus": grpc.unary_unary_rpc_method_handler(
            servicer.ListSkus,
            request_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusRequest.FromString,
            response_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.billing.v1.CloudCatalog", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CloudCatalog(object):
    """A catalog of Google Cloud Platform services and SKUs.
    Provides pricing information and metadata on Google Cloud Platform services
    and SKUs.
    """

    @staticmethod
    def ListServices(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.billing.v1.CloudCatalog/ListServices",
            google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesRequest.SerializeToString,
            google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListSkus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.billing.v1.CloudCatalog/ListSkus",
            google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusRequest.SerializeToString,
            google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
